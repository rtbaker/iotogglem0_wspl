ARM GAS  /tmp/cct8K0iD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"system_stm32f0xx.c"
  14              	@ GNU C11 (Fedora 5.2.0-4.fc24) version 5.2.0 (arm-none-eabi)
  15              	@	compiled by GNU C version 6.0.0 20160201 (Red Hat 6.0.0-0.9), GMP version 6.1.0, MPFR version 3.1
  16              	@ warning: GMP header version 6.1.0 differs from library version 6.1.1.
  17              	@ warning: MPFR header version 3.1.3 differs from library version 3.1.4.
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I .
  20              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/CMSIS/Device/ST/STM32F0xx/Include
  21              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/CMSIS/Include
  22              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/STM32F0xx_HAL_Driver/Inc
  23              	@ -I ../../STM32F0-Discovery_FW_V1.0.0/Utilities/STM32F0-Discovery
  24              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/BSP/STM32F072B-Discovery -I ./inc
  25              	@ -imultilib armv6-m -D__USES_INITFINI__ -D STM32F072xB
  26              	@ -D USE_STDPERIPH_DRIVER -D RUN_FROM_FLASH=1 src/system_stm32f0xx.c
  27              	@ -mcpu=cortex-m0 -mthumb -auxbase-strip src/system_stm32f0xx.o -g
  28              	@ -gdwarf-2 -Os -Wall -Wstrict-prototypes -fomit-frame-pointer
  29              	@ -fverbose-asm
  30              	@ options enabled:  -faggressive-loop-optimizations -falign-functions
  31              	@ -falign-jumps -falign-labels -falign-loops -fauto-inc-dec
  32              	@ -fbranch-count-reg -fcaller-saves -fchkp-check-incomplete-type
  33              	@ -fchkp-check-read -fchkp-check-write -fchkp-instrument-calls
  34              	@ -fchkp-narrow-bounds -fchkp-optimize -fchkp-store-bounds
  35              	@ -fchkp-use-static-bounds -fchkp-use-static-const-bounds
  36              	@ -fchkp-use-wrappers -fcombine-stack-adjustments -fcommon -fcompare-elim
  37              	@ -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer-pop
  38              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  39              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  40              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  41              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  42              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  43              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  44              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  45              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  46              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  47              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  48              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  49              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  50              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  51              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  52              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  53              	@ -freg-struct-return -freorder-blocks -freorder-functions
  54              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  55              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  56              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  57              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
ARM GAS  /tmp/cct8K0iD.s 			page 2


  58              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  59              	@ -fshow-column -fshrink-wrap -fsigned-zeros -fsplit-ivs-in-unroller
  60              	@ -fsplit-wide-types -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  61              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  62              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  63              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  64              	@ -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
  65              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  66              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  67              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  68              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  69              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  70              	@ -ftree-vrp -funit-at-a-time -fvar-tracking -fvar-tracking-assignments
  71              	@ -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  72              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  73              	@ -mvectorize-with-neon-quad
  74              	
  75              		.text
  76              	.Ltext0:
  77              		.cfi_sections	.debug_frame
  78              		.align	1
  79              		.global	SystemInit
  80              		.code	16
  81              		.thumb_func
  82              		.type	SystemInit, %function
  83              	SystemInit:
  84              	.LFB34:
  85              		.file 1 "src/system_stm32f0xx.c"
   1:src/system_stm32f0xx.c **** /**
   2:src/system_stm32f0xx.c ****   ******************************************************************************
   3:src/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:src/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:src/system_stm32f0xx.c ****   * @version V1.6.0
   6:src/system_stm32f0xx.c ****   * @date    27-May-2016
   7:src/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   8:src/system_stm32f0xx.c ****   *
   9:src/system_stm32f0xx.c ****   * 1. This file provides two functions and one global variable to be called from
  10:src/system_stm32f0xx.c ****   *    user application:
  11:src/system_stm32f0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:src/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  13:src/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  14:src/system_stm32f0xx.c ****   *
  15:src/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:src/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick
  17:src/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  18:src/system_stm32f0xx.c ****   *
  19:src/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:src/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  21:src/system_stm32f0xx.c ****   *                                 during program execution.
  22:src/system_stm32f0xx.c ****   *
  23:src/system_stm32f0xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:src/system_stm32f0xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f0xx.s" file, to
  25:src/system_stm32f0xx.c ****   *    configure the system clock before to branch to main program.
  26:src/system_stm32f0xx.c ****   *
  27:src/system_stm32f0xx.c ****   * 3. This file configures the system clock as follows:
  28:src/system_stm32f0xx.c ****   *=============================================================================
  29:src/system_stm32f0xx.c ****   *                         Supported STM32F0xx device
ARM GAS  /tmp/cct8K0iD.s 			page 3


  30:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  31:src/system_stm32f0xx.c ****   *        System Clock source                    | HSI
  32:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  33:src/system_stm32f0xx.c ****   *        SYSCLK(Hz)                             | 8000000
  34:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  35:src/system_stm32f0xx.c ****   *        HCLK(Hz)                               | 8000000
  36:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  37:src/system_stm32f0xx.c ****   *        AHB Prescaler                          | 1
  38:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  39:src/system_stm32f0xx.c ****   *        APB1 Prescaler                         | 1
  40:src/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  41:src/system_stm32f0xx.c ****   *=============================================================================
  42:src/system_stm32f0xx.c ****   ******************************************************************************
  43:src/system_stm32f0xx.c ****   * @attention
  44:src/system_stm32f0xx.c ****   *
  45:src/system_stm32f0xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  46:src/system_stm32f0xx.c ****   *
  47:src/system_stm32f0xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  48:src/system_stm32f0xx.c ****   * are permitted provided that the following conditions are met:
  49:src/system_stm32f0xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  50:src/system_stm32f0xx.c ****   *      this list of conditions and the following disclaimer.
  51:src/system_stm32f0xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  52:src/system_stm32f0xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  53:src/system_stm32f0xx.c ****   *      and/or other materials provided with the distribution.
  54:src/system_stm32f0xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  55:src/system_stm32f0xx.c ****   *      may be used to endorse or promote products derived from this software
  56:src/system_stm32f0xx.c ****   *      without specific prior written permission.
  57:src/system_stm32f0xx.c ****   *
  58:src/system_stm32f0xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  59:src/system_stm32f0xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  60:src/system_stm32f0xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  61:src/system_stm32f0xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  62:src/system_stm32f0xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  63:src/system_stm32f0xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  64:src/system_stm32f0xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  65:src/system_stm32f0xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  66:src/system_stm32f0xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  67:src/system_stm32f0xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  68:src/system_stm32f0xx.c ****   *
  69:src/system_stm32f0xx.c ****   ******************************************************************************
  70:src/system_stm32f0xx.c ****   */
  71:src/system_stm32f0xx.c **** 
  72:src/system_stm32f0xx.c **** /** @addtogroup CMSIS
  73:src/system_stm32f0xx.c ****   * @{
  74:src/system_stm32f0xx.c ****   */
  75:src/system_stm32f0xx.c **** 
  76:src/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  77:src/system_stm32f0xx.c ****   * @{
  78:src/system_stm32f0xx.c ****   */
  79:src/system_stm32f0xx.c **** 
  80:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  81:src/system_stm32f0xx.c ****   * @{
  82:src/system_stm32f0xx.c ****   */
  83:src/system_stm32f0xx.c **** 
  84:src/system_stm32f0xx.c **** #include "stm32f0xx.h"
  85:src/system_stm32f0xx.c **** 
  86:src/system_stm32f0xx.c **** /**
ARM GAS  /tmp/cct8K0iD.s 			page 4


  87:src/system_stm32f0xx.c ****   * @}
  88:src/system_stm32f0xx.c ****   */
  89:src/system_stm32f0xx.c **** 
  90:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
  91:src/system_stm32f0xx.c ****   * @{
  92:src/system_stm32f0xx.c ****   */
  93:src/system_stm32f0xx.c **** 
  94:src/system_stm32f0xx.c **** /**
  95:src/system_stm32f0xx.c ****   * @}
  96:src/system_stm32f0xx.c ****   */
  97:src/system_stm32f0xx.c **** 
  98:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
  99:src/system_stm32f0xx.c ****   * @{
 100:src/system_stm32f0xx.c ****   */
 101:src/system_stm32f0xx.c **** #if !defined  (HSE_VALUE) 
 102:src/system_stm32f0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
 103:src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
 104:src/system_stm32f0xx.c **** #endif /* HSE_VALUE */
 105:src/system_stm32f0xx.c **** 
 106:src/system_stm32f0xx.c **** #if !defined  (HSI_VALUE)
 107:src/system_stm32f0xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
 108:src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
 109:src/system_stm32f0xx.c **** #endif /* HSI_VALUE */
 110:src/system_stm32f0xx.c **** 
 111:src/system_stm32f0xx.c **** #if !defined (HSI48_VALUE)
 112:src/system_stm32f0xx.c **** #define HSI48_VALUE    ((uint32_t)48000000) /*!< Default value of the HSI48 Internal oscillator in 
 113:src/system_stm32f0xx.c ****                                                  This value can be provided and adapted by the user
 114:src/system_stm32f0xx.c **** #endif /* HSI48_VALUE */
 115:src/system_stm32f0xx.c **** /**
 116:src/system_stm32f0xx.c ****   * @}
 117:src/system_stm32f0xx.c ****   */
 118:src/system_stm32f0xx.c **** 
 119:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
 120:src/system_stm32f0xx.c ****   * @{
 121:src/system_stm32f0xx.c ****   */
 122:src/system_stm32f0xx.c **** 
 123:src/system_stm32f0xx.c **** /**
 124:src/system_stm32f0xx.c ****   * @}
 125:src/system_stm32f0xx.c ****   */
 126:src/system_stm32f0xx.c **** 
 127:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
 128:src/system_stm32f0xx.c ****   * @{
 129:src/system_stm32f0xx.c ****   */
 130:src/system_stm32f0xx.c ****   /* This variable is updated in three ways:
 131:src/system_stm32f0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:src/system_stm32f0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:src/system_stm32f0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 134:src/system_stm32f0xx.c ****          Note: If you use this function to configure the system clock there is no need to
 135:src/system_stm32f0xx.c ****                call the 2 first functions listed above, since SystemCoreClock variable is 
 136:src/system_stm32f0xx.c ****                updated automatically.
 137:src/system_stm32f0xx.c ****   */
 138:src/system_stm32f0xx.c **** uint32_t SystemCoreClock = 8000000;
 139:src/system_stm32f0xx.c **** 
 140:src/system_stm32f0xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 141:src/system_stm32f0xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 142:src/system_stm32f0xx.c **** 
 143:src/system_stm32f0xx.c **** /**
ARM GAS  /tmp/cct8K0iD.s 			page 5


 144:src/system_stm32f0xx.c ****   * @}
 145:src/system_stm32f0xx.c ****   */
 146:src/system_stm32f0xx.c **** 
 147:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 148:src/system_stm32f0xx.c ****   * @{
 149:src/system_stm32f0xx.c ****   */
 150:src/system_stm32f0xx.c **** 
 151:src/system_stm32f0xx.c **** /**
 152:src/system_stm32f0xx.c ****   * @}
 153:src/system_stm32f0xx.c ****   */
 154:src/system_stm32f0xx.c **** 
 155:src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 156:src/system_stm32f0xx.c ****   * @{
 157:src/system_stm32f0xx.c ****   */
 158:src/system_stm32f0xx.c **** 
 159:src/system_stm32f0xx.c **** /**
 160:src/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system.
 161:src/system_stm32f0xx.c ****   *         Initialize the default HSI clock source, vector table location and the PLL configuratio
 162:src/system_stm32f0xx.c ****   * @param  None
 163:src/system_stm32f0xx.c ****   * @retval None
 164:src/system_stm32f0xx.c ****   */
 165:src/system_stm32f0xx.c **** void SystemInit(void)
 166:src/system_stm32f0xx.c **** {
  86              		.loc 1 166 0
  87              		.cfi_startproc
 167:src/system_stm32f0xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 168:src/system_stm32f0xx.c ****   /* Set HSION bit */
 169:src/system_stm32f0xx.c ****   RCC->CR |= (uint32_t)0x00000001U;
  88              		.loc 1 169 0
  89 0000 0121     		movs	r1, #1	@ tmp127,
  90 0002 114B     		ldr	r3, .L2	@ tmp126,
 170:src/system_stm32f0xx.c **** 
 171:src/system_stm32f0xx.c **** #if defined (STM32F051x8) || defined (STM32F058x8)
 172:src/system_stm32f0xx.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
 173:src/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xF8FFB80CU;
 174:src/system_stm32f0xx.c **** #else
 175:src/system_stm32f0xx.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
 176:src/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0x08FFB80CU;
 177:src/system_stm32f0xx.c **** #endif /* STM32F051x8 or STM32F058x8 */
 178:src/system_stm32f0xx.c ****   
 179:src/system_stm32f0xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 180:src/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFFU;
 181:src/system_stm32f0xx.c **** 
 182:src/system_stm32f0xx.c ****   /* Reset HSEBYP bit */
 183:src/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFFU;
 184:src/system_stm32f0xx.c **** 
 185:src/system_stm32f0xx.c ****   /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 186:src/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xFFC0FFFFU;
 187:src/system_stm32f0xx.c **** 
 188:src/system_stm32f0xx.c ****   /* Reset PREDIV[3:0] bits */
 189:src/system_stm32f0xx.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0U;
 190:src/system_stm32f0xx.c **** 
 191:src/system_stm32f0xx.c **** #if defined (STM32F072xB) || defined (STM32F078xx)
 192:src/system_stm32f0xx.c ****   /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
 193:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFCFE2CU;
 194:src/system_stm32f0xx.c **** #elif defined (STM32F071xB)
 195:src/system_stm32f0xx.c ****   /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
ARM GAS  /tmp/cct8K0iD.s 			page 6


 196:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFCEACU;
 197:src/system_stm32f0xx.c **** #elif defined (STM32F091xC) || defined (STM32F098xx)
 198:src/system_stm32f0xx.c ****   /* Reset USART3SW[1:0], USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
 199:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFF0FEACU;
 200:src/system_stm32f0xx.c **** #elif defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038
 201:src/system_stm32f0xx.c ****   /* Reset USART1SW[1:0], I2C1SW and ADCSW bits */
 202:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFEECU;
 203:src/system_stm32f0xx.c **** #elif defined (STM32F051x8) || defined (STM32F058xx)
 204:src/system_stm32f0xx.c ****   /* Reset USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
 205:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFEACU;
 206:src/system_stm32f0xx.c **** #elif defined (STM32F042x6) || defined (STM32F048xx)
 207:src/system_stm32f0xx.c ****   /* Reset USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
 208:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFE2CU;
 209:src/system_stm32f0xx.c **** #elif defined (STM32F070x6) || defined (STM32F070xB)
 210:src/system_stm32f0xx.c ****   /* Reset USART1SW[1:0], I2C1SW, USBSW and ADCSW bits */
 211:src/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFE6CU;
 212:src/system_stm32f0xx.c ****   /* Set default USB clock to PLLCLK, since there is no HSI48 */
 213:src/system_stm32f0xx.c ****   RCC->CFGR3 |= (uint32_t)0x00000080U;  
 214:src/system_stm32f0xx.c **** #else
 215:src/system_stm32f0xx.c ****  #warning "No target selected"
 216:src/system_stm32f0xx.c **** #endif
 217:src/system_stm32f0xx.c **** 
 218:src/system_stm32f0xx.c ****   /* Reset HSI14 bit */
 219:src/system_stm32f0xx.c ****   RCC->CR2 &= (uint32_t)0xFFFFFFFEU;
 220:src/system_stm32f0xx.c **** 
 221:src/system_stm32f0xx.c ****   /* Disable all interrupts */
 222:src/system_stm32f0xx.c ****   RCC->CIR = 0x00000000U;
 223:src/system_stm32f0xx.c **** 
 224:src/system_stm32f0xx.c **** }
  91              		.loc 1 224 0
  92              		@ sp needed	@
 169:src/system_stm32f0xx.c **** 
  93              		.loc 1 169 0
  94 0004 1A68     		ldr	r2, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
  95 0006 0A43     		orrs	r2, r1	@ D.4863, tmp127
  96 0008 1A60     		str	r2, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
 176:src/system_stm32f0xx.c **** #endif /* STM32F051x8 or STM32F058x8 */
  97              		.loc 1 176 0
  98 000a 5868     		ldr	r0, [r3, #4]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
  99 000c 0F4A     		ldr	r2, .L2+4	@ tmp130,
 100 000e 0240     		ands	r2, r0	@ D.4863, D.4863
 101 0010 5A60     		str	r2, [r3, #4]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 180:src/system_stm32f0xx.c **** 
 102              		.loc 1 180 0
 103 0012 1868     		ldr	r0, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
 104 0014 0E4A     		ldr	r2, .L2+8	@ tmp133,
 105 0016 0240     		ands	r2, r0	@ D.4863, D.4863
 106 0018 1A60     		str	r2, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
 183:src/system_stm32f0xx.c **** 
 107              		.loc 1 183 0
 108 001a 1868     		ldr	r0, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
 109 001c 0D4A     		ldr	r2, .L2+12	@ tmp136,
 110 001e 0240     		ands	r2, r0	@ D.4863, D.4863
 111 0020 1A60     		str	r2, [r3]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR
 186:src/system_stm32f0xx.c **** 
 112              		.loc 1 186 0
 113 0022 5868     		ldr	r0, [r3, #4]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
ARM GAS  /tmp/cct8K0iD.s 			page 7


 114 0024 0C4A     		ldr	r2, .L2+16	@ tmp139,
 115 0026 0240     		ands	r2, r0	@ D.4863, D.4863
 189:src/system_stm32f0xx.c **** 
 116              		.loc 1 189 0
 117 0028 0F20     		movs	r0, #15	@ tmp142,
 186:src/system_stm32f0xx.c **** 
 118              		.loc 1 186 0
 119 002a 5A60     		str	r2, [r3, #4]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 189:src/system_stm32f0xx.c **** 
 120              		.loc 1 189 0
 121 002c DA6A     		ldr	r2, [r3, #44]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 122 002e 8243     		bics	r2, r0	@ D.4863, tmp142
 123 0030 DA62     		str	r2, [r3, #44]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 193:src/system_stm32f0xx.c **** #elif defined (STM32F071xB)
 124              		.loc 1 193 0
 125 0032 186B     		ldr	r0, [r3, #48]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR3
 126 0034 094A     		ldr	r2, .L2+20	@ tmp145,
 127 0036 0240     		ands	r2, r0	@ D.4863, D.4863
 128 0038 1A63     		str	r2, [r3, #48]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CFGR3
 219:src/system_stm32f0xx.c **** 
 129              		.loc 1 219 0
 130 003a 5A6B     		ldr	r2, [r3, #52]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR2
 131 003c 8A43     		bics	r2, r1	@ D.4863, tmp127
 132 003e 5A63     		str	r2, [r3, #52]	@ D.4863, MEM[(struct RCC_TypeDef *)1073876992B].CR2
 222:src/system_stm32f0xx.c **** 
 133              		.loc 1 222 0
 134 0040 0022     		movs	r2, #0	@ tmp151,
 135 0042 9A60     		str	r2, [r3, #8]	@ tmp151, MEM[(struct RCC_TypeDef *)1073876992B].CIR
 136              		.loc 1 224 0
 137 0044 7047     		bx	lr
 138              	.L3:
 139 0046 C046     		.align	2
 140              	.L2:
 141 0048 00100240 		.word	1073876992
 142 004c 0CB8FF08 		.word	150976524
 143 0050 FFFFF6FE 		.word	-17367041
 144 0054 FFFFFBFF 		.word	-262145
 145 0058 FFFFC0FF 		.word	-4128769
 146 005c 2CFEFCFF 		.word	-197076
 147              		.cfi_endproc
 148              	.LFE34:
 149              		.size	SystemInit, .-SystemInit
 150              		.global	__aeabi_uidiv
 151              		.align	1
 152              		.global	SystemCoreClockUpdate
 153              		.code	16
 154              		.thumb_func
 155              		.type	SystemCoreClockUpdate, %function
 156              	SystemCoreClockUpdate:
 157              	.LFB35:
 225:src/system_stm32f0xx.c **** 
 226:src/system_stm32f0xx.c **** /**
 227:src/system_stm32f0xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 228:src/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 229:src/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 230:src/system_stm32f0xx.c ****   *         other parameters.
 231:src/system_stm32f0xx.c ****   *
ARM GAS  /tmp/cct8K0iD.s 			page 8


 232:src/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 233:src/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 234:src/system_stm32f0xx.c ****   *         based on this variable will be incorrect.
 235:src/system_stm32f0xx.c ****   *
 236:src/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real
 237:src/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 238:src/system_stm32f0xx.c ****   *           constant and the selected clock source:
 239:src/system_stm32f0xx.c ****   *
 240:src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 241:src/system_stm32f0xx.c ****   *
 242:src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 243:src/system_stm32f0xx.c ****   *
 244:src/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 245:src/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 246:src/system_stm32f0xx.c ****   *
 247:src/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx_hal.h file (default value
 248:src/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 249:src/system_stm32f0xx.c ****   *             in voltage and temperature.
 250:src/system_stm32f0xx.c ****   *
 251:src/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx_hal.h file (default value
 252:src/system_stm32f0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 253:src/system_stm32f0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 254:src/system_stm32f0xx.c ****   *              have wrong result.
 255:src/system_stm32f0xx.c ****   *
 256:src/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 257:src/system_stm32f0xx.c ****   *           value for HSE crystal.
 258:src/system_stm32f0xx.c ****   *
 259:src/system_stm32f0xx.c ****   * @param  None
 260:src/system_stm32f0xx.c ****   * @retval None
 261:src/system_stm32f0xx.c ****   */
 262:src/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 263:src/system_stm32f0xx.c **** {
 158              		.loc 1 263 0
 159              		.cfi_startproc
 160              	.LVL0:
 161 0060 F8B5     		push	{r3, r4, r5, r6, r7, lr}	@
 162              	.LCFI0:
 163              		.cfi_def_cfa_offset 24
 164              		.cfi_offset 3, -24
 165              		.cfi_offset 4, -20
 166              		.cfi_offset 5, -16
 167              		.cfi_offset 6, -12
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 264:src/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
 265:src/system_stm32f0xx.c **** 
 266:src/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 267:src/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 268:src/system_stm32f0xx.c **** 
 269:src/system_stm32f0xx.c ****   switch (tmp)
 170              		.loc 1 269 0
 171 0062 0C23     		movs	r3, #12	@ tmp136,
 267:src/system_stm32f0xx.c **** 
 172              		.loc 1 267 0
 173 0064 164E     		ldr	r6, .L14	@ tmp134,
 174 0066 174D     		ldr	r5, .L14+4	@ tmp182,
 175 0068 7268     		ldr	r2, [r6, #4]	@ D.4866, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
ARM GAS  /tmp/cct8K0iD.s 			page 9


 176              	.LVL1:
 177              		.loc 1 269 0
 178 006a 1340     		ands	r3, r2	@ tmp, D.4866
 179              	.LVL2:
 180 006c 042B     		cmp	r3, #4	@ tmp,
 181 006e 01D0     		beq	.L6	@,
 182 0070 082B     		cmp	r3, #8	@ tmp,
 183 0072 02D0     		beq	.L7	@,
 184              	.L6:
 270:src/system_stm32f0xx.c ****   {
 271:src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 272:src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 273:src/system_stm32f0xx.c ****       break;
 274:src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 275:src/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 185              		.loc 1 275 0
 186 0074 144B     		ldr	r3, .L14+8	@ tmp140,
 187              	.LVL3:
 188 0076 2B60     		str	r3, [r5]	@ tmp140, SystemCoreClock
 276:src/system_stm32f0xx.c ****       break;
 189              		.loc 1 276 0
 190 0078 18E0     		b	.L9	@
 191              	.LVL4:
 192              	.L7:
 277:src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 278:src/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 279:src/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 280:src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 281:src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 282:src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 193              		.loc 1 282 0
 194 007a 0F23     		movs	r3, #15	@ tmp148,
 195              	.LVL5:
 279:src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 196              		.loc 1 279 0
 197 007c 7468     		ldr	r4, [r6, #4]	@ D.4866, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 198              	.LVL6:
 280:src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 199              		.loc 1 280 0
 200 007e 7268     		ldr	r2, [r6, #4]	@ D.4866, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 201              	.LVL7:
 202              		.loc 1 282 0
 203 0080 F16A     		ldr	r1, [r6, #44]	@ D.4866, MEM[(struct RCC_TypeDef *)1073876992B].CFGR2
 280:src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 204              		.loc 1 280 0
 205 0082 C027     		movs	r7, #192	@ tmp143,
 206              		.loc 1 282 0
 207 0084 1940     		ands	r1, r3	@ D.4866, tmp148
 283:src/system_stm32f0xx.c **** 
 284:src/system_stm32f0xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 208              		.loc 1 284 0
 209 0086 8023     		movs	r3, #128	@ tmp149,
 281:src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 210              		.loc 1 281 0
 211 0088 A402     		lsls	r4, r4, #10	@ pllmull, D.4866,
 212              	.LVL8:
 280:src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
ARM GAS  /tmp/cct8K0iD.s 			page 10


 213              		.loc 1 280 0
 214 008a 7F02     		lsls	r7, r7, #9	@ tmp143, tmp143,
 281:src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 215              		.loc 1 281 0
 216 008c 240F     		lsrs	r4, r4, #28	@ D.4866, pllmull,
 280:src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 217              		.loc 1 280 0
 218 008e 3A40     		ands	r2, r7	@ pllsource, tmp143
 219              	.LVL9:
 281:src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 220              		.loc 1 281 0
 221 0090 0234     		adds	r4, r4, #2	@ pllmull,
 222              	.LVL10:
 282:src/system_stm32f0xx.c **** 
 223              		.loc 1 282 0
 224 0092 0131     		adds	r1, r1, #1	@ predivfactor,
 225              	.LVL11:
 226              		.loc 1 284 0
 227 0094 5B02     		lsls	r3, r3, #9	@ tmp149, tmp149,
 228 0096 9A42     		cmp	r2, r3	@ pllsource, tmp149
 229 0098 03D0     		beq	.L11	@,
 285:src/system_stm32f0xx.c ****       {
 286:src/system_stm32f0xx.c ****         /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
 287:src/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
 288:src/system_stm32f0xx.c ****       }
 289:src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 290:src/system_stm32f0xx.c ****       else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
 230              		.loc 1 290 0
 231 009a BA42     		cmp	r2, r7	@ pllsource, tmp143
 232 009c 01D1     		bne	.L11	@,
 291:src/system_stm32f0xx.c ****       {
 292:src/system_stm32f0xx.c ****         /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
 293:src/system_stm32f0xx.c ****         SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
 233              		.loc 1 293 0
 234 009e 0B48     		ldr	r0, .L14+12	@,
 235 00a0 00E0     		b	.L12	@
 236              	.L11:
 294:src/system_stm32f0xx.c ****       }
 295:src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F091xC || STM32F098xx */
 296:src/system_stm32f0xx.c ****       else
 297:src/system_stm32f0xx.c ****       {
 298:src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
 299:src/system_stm32f0xx.c ****  || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
 300:src/system_stm32f0xx.c ****  || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
 301:src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
 302:src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
 237              		.loc 1 302 0
 238 00a2 0948     		ldr	r0, .L14+8	@,
 239              	.L12:
 240 00a4 FFF7FEFF 		bl	__aeabi_uidiv	@
 241              	.LVL12:
 242 00a8 4443     		muls	r4, r0	@ D.4866, D.4866
 243              	.LVL13:
 244 00aa 2C60     		str	r4, [r5]	@ D.4866, SystemCoreClock
 245              	.L9:
 303:src/system_stm32f0xx.c **** #else
 304:src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
ARM GAS  /tmp/cct8K0iD.s 			page 11


 305:src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 306:src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 307:src/system_stm32f0xx.c ****           STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
 308:src/system_stm32f0xx.c ****           STM32F091xC || STM32F098xx || STM32F030xC */
 309:src/system_stm32f0xx.c ****       }
 310:src/system_stm32f0xx.c ****       break;
 311:src/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 312:src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 313:src/system_stm32f0xx.c ****       break;
 314:src/system_stm32f0xx.c ****   }
 315:src/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 316:src/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 317:src/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 246              		.loc 1 317 0
 247 00ac 7368     		ldr	r3, [r6, #4]	@ D.4866, MEM[(struct RCC_TypeDef *)1073876992B].CFGR
 248              	.LVL14:
 318:src/system_stm32f0xx.c ****   /* HCLK clock frequency */
 319:src/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;
 249              		.loc 1 319 0
 250 00ae 084A     		ldr	r2, .L14+16	@ tmp174,
 317:src/system_stm32f0xx.c ****   /* HCLK clock frequency */
 251              		.loc 1 317 0
 252 00b0 1B06     		lsls	r3, r3, #24	@ D.4866, D.4866,
 253              	.LVL15:
 254 00b2 1B0F     		lsrs	r3, r3, #28	@ D.4866, D.4866,
 255              		.loc 1 319 0
 256 00b4 D35C     		ldrb	r3, [r2, r3]	@ tmp, AHBPrescTable
 257 00b6 2A68     		ldr	r2, [r5]	@ D.4866, SystemCoreClock
 320:src/system_stm32f0xx.c **** }
 258              		.loc 1 320 0
 259              		@ sp needed	@
 319:src/system_stm32f0xx.c **** }
 260              		.loc 1 319 0
 261 00b8 DA40     		lsrs	r2, r2, r3	@ D.4866, D.4866, tmp
 262 00ba 2A60     		str	r2, [r5]	@ D.4866, SystemCoreClock
 263              		.loc 1 320 0
 264 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 265              	.L15:
 266 00be C046     		.align	2
 267              	.L14:
 268 00c0 00100240 		.word	1073876992
 269 00c4 00000000 		.word	.LANCHOR0
 270 00c8 00127A00 		.word	8000000
 271 00cc 006CDC02 		.word	48000000
 272 00d0 00000000 		.word	.LANCHOR1
 273              		.cfi_endproc
 274              	.LFE35:
 275              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 276              		.global	APBPrescTable
 277              		.global	AHBPrescTable
 278              		.global	SystemCoreClock
 279              		.section	.rodata
 280              		.set	.LANCHOR1,. + 0
 281              		.type	AHBPrescTable, %object
 282              		.size	AHBPrescTable, 16
 283              	AHBPrescTable:
 284 0000 00       		.byte	0
ARM GAS  /tmp/cct8K0iD.s 			page 12


 285 0001 00       		.byte	0
 286 0002 00       		.byte	0
 287 0003 00       		.byte	0
 288 0004 00       		.byte	0
 289 0005 00       		.byte	0
 290 0006 00       		.byte	0
 291 0007 00       		.byte	0
 292 0008 01       		.byte	1
 293 0009 02       		.byte	2
 294 000a 03       		.byte	3
 295 000b 04       		.byte	4
 296 000c 06       		.byte	6
 297 000d 07       		.byte	7
 298 000e 08       		.byte	8
 299 000f 09       		.byte	9
 300              		.type	APBPrescTable, %object
 301              		.size	APBPrescTable, 8
 302              	APBPrescTable:
 303 0010 00       		.byte	0
 304 0011 00       		.byte	0
 305 0012 00       		.byte	0
 306 0013 00       		.byte	0
 307 0014 01       		.byte	1
 308 0015 02       		.byte	2
 309 0016 03       		.byte	3
 310 0017 04       		.byte	4
 311              		.data
 312              		.align	2
 313              		.set	.LANCHOR0,. + 0
 314              		.type	SystemCoreClock, %object
 315              		.size	SystemCoreClock, 4
 316              	SystemCoreClock:
 317 0000 00127A00 		.word	8000000
 318              		.text
 319              	.Letext0:
 320              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 321              		.file 3 "/usr/arm-none-eabi/include/stdint.h"
 322              		.file 4 "../../STM32Cube_FW_F0_V1.6.0/Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 323              		.section	.debug_info,"",%progbits
 324              	.Ldebug_info0:
 325 0000 58020000 		.4byte	0x258
 326 0004 0200     		.2byte	0x2
 327 0006 00000000 		.4byte	.Ldebug_abbrev0
 328 000a 04       		.byte	0x4
 329 000b 01       		.uleb128 0x1
 330 000c 35000000 		.4byte	.LASF31
 331 0010 0C       		.byte	0xc
 332 0011 D7000000 		.4byte	.LASF32
 333 0015 01010000 		.4byte	.LASF33
 334 0019 00000000 		.4byte	.Ltext0
 335 001d D4000000 		.4byte	.Letext0
 336 0021 00000000 		.4byte	.Ldebug_line0
 337 0025 02       		.uleb128 0x2
 338 0026 01       		.byte	0x1
 339 0027 06       		.byte	0x6
 340 0028 EB010000 		.4byte	.LASF0
 341 002c 03       		.uleb128 0x3
ARM GAS  /tmp/cct8K0iD.s 			page 13


 342 002d 08000000 		.4byte	.LASF5
 343 0031 02       		.byte	0x2
 344 0032 1D       		.byte	0x1d
 345 0033 37000000 		.4byte	0x37
 346 0037 02       		.uleb128 0x2
 347 0038 01       		.byte	0x1
 348 0039 08       		.byte	0x8
 349 003a 90000000 		.4byte	.LASF1
 350 003e 02       		.uleb128 0x2
 351 003f 02       		.byte	0x2
 352 0040 05       		.byte	0x5
 353 0041 C3010000 		.4byte	.LASF2
 354 0045 02       		.uleb128 0x2
 355 0046 02       		.byte	0x2
 356 0047 07       		.byte	0x7
 357 0048 C4000000 		.4byte	.LASF3
 358 004c 02       		.uleb128 0x2
 359 004d 04       		.byte	0x4
 360 004e 05       		.byte	0x5
 361 004f E2010000 		.4byte	.LASF4
 362 0053 03       		.uleb128 0x3
 363 0054 F6000000 		.4byte	.LASF6
 364 0058 02       		.byte	0x2
 365 0059 41       		.byte	0x41
 366 005a 5E000000 		.4byte	0x5e
 367 005e 02       		.uleb128 0x2
 368 005f 04       		.byte	0x4
 369 0060 07       		.byte	0x7
 370 0061 AC000000 		.4byte	.LASF7
 371 0065 02       		.uleb128 0x2
 372 0066 08       		.byte	0x8
 373 0067 05       		.byte	0x5
 374 0068 81010000 		.4byte	.LASF8
 375 006c 02       		.uleb128 0x2
 376 006d 08       		.byte	0x8
 377 006e 07       		.byte	0x7
 378 006f 4E010000 		.4byte	.LASF9
 379 0073 04       		.uleb128 0x4
 380 0074 04       		.byte	0x4
 381 0075 05       		.byte	0x5
 382 0076 696E7400 		.ascii	"int\000"
 383 007a 02       		.uleb128 0x2
 384 007b 04       		.byte	0x4
 385 007c 07       		.byte	0x7
 386 007d 41010000 		.4byte	.LASF10
 387 0081 03       		.uleb128 0x3
 388 0082 65010000 		.4byte	.LASF11
 389 0086 03       		.byte	0x3
 390 0087 15       		.byte	0x15
 391 0088 2C000000 		.4byte	0x2c
 392 008c 03       		.uleb128 0x3
 393 008d D9010000 		.4byte	.LASF12
 394 0091 03       		.byte	0x3
 395 0092 2D       		.byte	0x2d
 396 0093 53000000 		.4byte	0x53
 397 0097 02       		.uleb128 0x2
 398 0098 04       		.byte	0x4
ARM GAS  /tmp/cct8K0iD.s 			page 14


 399 0099 07       		.byte	0x7
 400 009a 78010000 		.4byte	.LASF13
 401 009e 05       		.uleb128 0x5
 402 009f 8C000000 		.4byte	0x8c
 403 00a3 06       		.uleb128 0x6
 404 00a4 38       		.byte	0x38
 405 00a5 04       		.byte	0x4
 406 00a6 CE01     		.2byte	0x1ce
 407 00a8 7E010000 		.4byte	0x17e
 408 00ac 07       		.uleb128 0x7
 409 00ad 435200   		.ascii	"CR\000"
 410 00b0 04       		.byte	0x4
 411 00b1 D001     		.2byte	0x1d0
 412 00b3 9E000000 		.4byte	0x9e
 413 00b7 02       		.byte	0x2
 414 00b8 23       		.byte	0x23
 415 00b9 00       		.uleb128 0
 416 00ba 08       		.uleb128 0x8
 417 00bb 12000000 		.4byte	.LASF14
 418 00bf 04       		.byte	0x4
 419 00c0 D101     		.2byte	0x1d1
 420 00c2 9E000000 		.4byte	0x9e
 421 00c6 02       		.byte	0x2
 422 00c7 23       		.byte	0x23
 423 00c8 04       		.uleb128 0x4
 424 00c9 07       		.uleb128 0x7
 425 00ca 43495200 		.ascii	"CIR\000"
 426 00ce 04       		.byte	0x4
 427 00cf D201     		.2byte	0x1d2
 428 00d1 9E000000 		.4byte	0x9e
 429 00d5 02       		.byte	0x2
 430 00d6 23       		.byte	0x23
 431 00d7 08       		.uleb128 0x8
 432 00d8 08       		.uleb128 0x8
 433 00d9 2B010000 		.4byte	.LASF15
 434 00dd 04       		.byte	0x4
 435 00de D301     		.2byte	0x1d3
 436 00e0 9E000000 		.4byte	0x9e
 437 00e4 02       		.byte	0x2
 438 00e5 23       		.byte	0x23
 439 00e6 0C       		.uleb128 0xc
 440 00e7 08       		.uleb128 0x8
 441 00e8 87000000 		.4byte	.LASF16
 442 00ec 04       		.byte	0x4
 443 00ed D401     		.2byte	0x1d4
 444 00ef 9E000000 		.4byte	0x9e
 445 00f3 02       		.byte	0x2
 446 00f4 23       		.byte	0x23
 447 00f5 10       		.uleb128 0x10
 448 00f6 08       		.uleb128 0x8
 449 00f7 17000000 		.4byte	.LASF17
 450 00fb 04       		.byte	0x4
 451 00fc D501     		.2byte	0x1d5
 452 00fe 9E000000 		.4byte	0x9e
 453 0102 02       		.byte	0x2
 454 0103 23       		.byte	0x23
 455 0104 14       		.uleb128 0x14
ARM GAS  /tmp/cct8K0iD.s 			page 15


 456 0105 08       		.uleb128 0x8
 457 0106 EE000000 		.4byte	.LASF18
 458 010a 04       		.byte	0x4
 459 010b D601     		.2byte	0x1d6
 460 010d 9E000000 		.4byte	0x9e
 461 0111 02       		.byte	0x2
 462 0112 23       		.byte	0x23
 463 0113 18       		.uleb128 0x18
 464 0114 08       		.uleb128 0x8
 465 0115 23010000 		.4byte	.LASF19
 466 0119 04       		.byte	0x4
 467 011a D701     		.2byte	0x1d7
 468 011c 9E000000 		.4byte	0x9e
 469 0120 02       		.byte	0x2
 470 0121 23       		.byte	0x23
 471 0122 1C       		.uleb128 0x1c
 472 0123 08       		.uleb128 0x8
 473 0124 30000000 		.4byte	.LASF20
 474 0128 04       		.byte	0x4
 475 0129 D801     		.2byte	0x1d8
 476 012b 9E000000 		.4byte	0x9e
 477 012f 02       		.byte	0x2
 478 0130 23       		.byte	0x23
 479 0131 20       		.uleb128 0x20
 480 0132 07       		.uleb128 0x7
 481 0133 43535200 		.ascii	"CSR\000"
 482 0137 04       		.byte	0x4
 483 0138 D901     		.2byte	0x1d9
 484 013a 9E000000 		.4byte	0x9e
 485 013e 02       		.byte	0x2
 486 013f 23       		.byte	0x23
 487 0140 24       		.uleb128 0x24
 488 0141 08       		.uleb128 0x8
 489 0142 28000000 		.4byte	.LASF21
 490 0146 04       		.byte	0x4
 491 0147 DA01     		.2byte	0x1da
 492 0149 9E000000 		.4byte	0x9e
 493 014d 02       		.byte	0x2
 494 014e 23       		.byte	0x23
 495 014f 28       		.uleb128 0x28
 496 0150 08       		.uleb128 0x8
 497 0151 81000000 		.4byte	.LASF22
 498 0155 04       		.byte	0x4
 499 0156 DB01     		.2byte	0x1db
 500 0158 9E000000 		.4byte	0x9e
 501 015c 02       		.byte	0x2
 502 015d 23       		.byte	0x23
 503 015e 2C       		.uleb128 0x2c
 504 015f 08       		.uleb128 0x8
 505 0160 BE000000 		.4byte	.LASF23
 506 0164 04       		.byte	0x4
 507 0165 DC01     		.2byte	0x1dc
 508 0167 9E000000 		.4byte	0x9e
 509 016b 02       		.byte	0x2
 510 016c 23       		.byte	0x23
 511 016d 30       		.uleb128 0x30
 512 016e 07       		.uleb128 0x7
ARM GAS  /tmp/cct8K0iD.s 			page 16


 513 016f 43523200 		.ascii	"CR2\000"
 514 0173 04       		.byte	0x4
 515 0174 DD01     		.2byte	0x1dd
 516 0176 9E000000 		.4byte	0x9e
 517 017a 02       		.byte	0x2
 518 017b 23       		.byte	0x23
 519 017c 34       		.uleb128 0x34
 520 017d 00       		.byte	0
 521 017e 09       		.uleb128 0x9
 522 017f CD010000 		.4byte	.LASF24
 523 0183 04       		.byte	0x4
 524 0184 DE01     		.2byte	0x1de
 525 0186 A3000000 		.4byte	0xa3
 526 018a 0A       		.uleb128 0xa
 527 018b 01       		.byte	0x1
 528 018c 6D010000 		.4byte	.LASF34
 529 0190 01       		.byte	0x1
 530 0191 A5       		.byte	0xa5
 531 0192 01       		.byte	0x1
 532 0193 00000000 		.4byte	.LFB34
 533 0197 60000000 		.4byte	.LFE34
 534 019b 02       		.byte	0x2
 535 019c 7D       		.byte	0x7d
 536 019d 00       		.sleb128 0
 537 019e 01       		.byte	0x1
 538 019f 0B       		.uleb128 0xb
 539 01a0 01       		.byte	0x1
 540 01a1 9F010000 		.4byte	.LASF35
 541 01a5 01       		.byte	0x1
 542 01a6 0601     		.2byte	0x106
 543 01a8 01       		.byte	0x1
 544 01a9 60000000 		.4byte	.LFB35
 545 01ad D4000000 		.4byte	.LFE35
 546 01b1 00000000 		.4byte	.LLST0
 547 01b5 01       		.byte	0x1
 548 01b6 FB010000 		.4byte	0x1fb
 549 01ba 0C       		.uleb128 0xc
 550 01bb 746D7000 		.ascii	"tmp\000"
 551 01bf 01       		.byte	0x1
 552 01c0 0801     		.2byte	0x108
 553 01c2 8C000000 		.4byte	0x8c
 554 01c6 20000000 		.4byte	.LLST1
 555 01ca 0D       		.uleb128 0xd
 556 01cb 00000000 		.4byte	.LASF25
 557 01cf 01       		.byte	0x1
 558 01d0 0801     		.2byte	0x108
 559 01d2 8C000000 		.4byte	0x8c
 560 01d6 94000000 		.4byte	.LLST2
 561 01da 0D       		.uleb128 0xd
 562 01db 1E000000 		.4byte	.LASF26
 563 01df 01       		.byte	0x1
 564 01e0 0801     		.2byte	0x108
 565 01e2 8C000000 		.4byte	0x8c
 566 01e6 C4000000 		.4byte	.LLST3
 567 01ea 0D       		.uleb128 0xd
 568 01eb 34010000 		.4byte	.LASF27
 569 01ef 01       		.byte	0x1
ARM GAS  /tmp/cct8K0iD.s 			page 17


 570 01f0 0801     		.2byte	0x108
 571 01f2 8C000000 		.4byte	0x8c
 572 01f6 E3000000 		.4byte	.LLST4
 573 01fa 00       		.byte	0
 574 01fb 0E       		.uleb128 0xe
 575 01fc 8F010000 		.4byte	.LASF28
 576 0200 01       		.byte	0x1
 577 0201 8A       		.byte	0x8a
 578 0202 8C000000 		.4byte	0x8c
 579 0206 01       		.byte	0x1
 580 0207 05       		.byte	0x5
 581 0208 03       		.byte	0x3
 582 0209 00000000 		.4byte	SystemCoreClock
 583 020d 0F       		.uleb128 0xf
 584 020e 81000000 		.4byte	0x81
 585 0212 1D020000 		.4byte	0x21d
 586 0216 10       		.uleb128 0x10
 587 0217 97000000 		.4byte	0x97
 588 021b 0F       		.byte	0xf
 589 021c 00       		.byte	0
 590 021d 0E       		.uleb128 0xe
 591 021e 9E000000 		.4byte	.LASF29
 592 0222 01       		.byte	0x1
 593 0223 8C       		.byte	0x8c
 594 0224 2F020000 		.4byte	0x22f
 595 0228 01       		.byte	0x1
 596 0229 05       		.byte	0x5
 597 022a 03       		.byte	0x3
 598 022b 00000000 		.4byte	AHBPrescTable
 599 022f 11       		.uleb128 0x11
 600 0230 0D020000 		.4byte	0x20d
 601 0234 0F       		.uleb128 0xf
 602 0235 81000000 		.4byte	0x81
 603 0239 44020000 		.4byte	0x244
 604 023d 10       		.uleb128 0x10
 605 023e 97000000 		.4byte	0x97
 606 0242 07       		.byte	0x7
 607 0243 00       		.byte	0
 608 0244 0E       		.uleb128 0xe
 609 0245 B5010000 		.4byte	.LASF30
 610 0249 01       		.byte	0x1
 611 024a 8D       		.byte	0x8d
 612 024b 56020000 		.4byte	0x256
 613 024f 01       		.byte	0x1
 614 0250 05       		.byte	0x5
 615 0251 03       		.byte	0x3
 616 0252 00000000 		.4byte	APBPrescTable
 617 0256 11       		.uleb128 0x11
 618 0257 34020000 		.4byte	0x234
 619 025b 00       		.byte	0
 620              		.section	.debug_abbrev,"",%progbits
 621              	.Ldebug_abbrev0:
 622 0000 01       		.uleb128 0x1
 623 0001 11       		.uleb128 0x11
 624 0002 01       		.byte	0x1
 625 0003 25       		.uleb128 0x25
 626 0004 0E       		.uleb128 0xe
ARM GAS  /tmp/cct8K0iD.s 			page 18


 627 0005 13       		.uleb128 0x13
 628 0006 0B       		.uleb128 0xb
 629 0007 03       		.uleb128 0x3
 630 0008 0E       		.uleb128 0xe
 631 0009 1B       		.uleb128 0x1b
 632 000a 0E       		.uleb128 0xe
 633 000b 11       		.uleb128 0x11
 634 000c 01       		.uleb128 0x1
 635 000d 12       		.uleb128 0x12
 636 000e 01       		.uleb128 0x1
 637 000f 10       		.uleb128 0x10
 638 0010 06       		.uleb128 0x6
 639 0011 00       		.byte	0
 640 0012 00       		.byte	0
 641 0013 02       		.uleb128 0x2
 642 0014 24       		.uleb128 0x24
 643 0015 00       		.byte	0
 644 0016 0B       		.uleb128 0xb
 645 0017 0B       		.uleb128 0xb
 646 0018 3E       		.uleb128 0x3e
 647 0019 0B       		.uleb128 0xb
 648 001a 03       		.uleb128 0x3
 649 001b 0E       		.uleb128 0xe
 650 001c 00       		.byte	0
 651 001d 00       		.byte	0
 652 001e 03       		.uleb128 0x3
 653 001f 16       		.uleb128 0x16
 654 0020 00       		.byte	0
 655 0021 03       		.uleb128 0x3
 656 0022 0E       		.uleb128 0xe
 657 0023 3A       		.uleb128 0x3a
 658 0024 0B       		.uleb128 0xb
 659 0025 3B       		.uleb128 0x3b
 660 0026 0B       		.uleb128 0xb
 661 0027 49       		.uleb128 0x49
 662 0028 13       		.uleb128 0x13
 663 0029 00       		.byte	0
 664 002a 00       		.byte	0
 665 002b 04       		.uleb128 0x4
 666 002c 24       		.uleb128 0x24
 667 002d 00       		.byte	0
 668 002e 0B       		.uleb128 0xb
 669 002f 0B       		.uleb128 0xb
 670 0030 3E       		.uleb128 0x3e
 671 0031 0B       		.uleb128 0xb
 672 0032 03       		.uleb128 0x3
 673 0033 08       		.uleb128 0x8
 674 0034 00       		.byte	0
 675 0035 00       		.byte	0
 676 0036 05       		.uleb128 0x5
 677 0037 35       		.uleb128 0x35
 678 0038 00       		.byte	0
 679 0039 49       		.uleb128 0x49
 680 003a 13       		.uleb128 0x13
 681 003b 00       		.byte	0
 682 003c 00       		.byte	0
 683 003d 06       		.uleb128 0x6
ARM GAS  /tmp/cct8K0iD.s 			page 19


 684 003e 13       		.uleb128 0x13
 685 003f 01       		.byte	0x1
 686 0040 0B       		.uleb128 0xb
 687 0041 0B       		.uleb128 0xb
 688 0042 3A       		.uleb128 0x3a
 689 0043 0B       		.uleb128 0xb
 690 0044 3B       		.uleb128 0x3b
 691 0045 05       		.uleb128 0x5
 692 0046 01       		.uleb128 0x1
 693 0047 13       		.uleb128 0x13
 694 0048 00       		.byte	0
 695 0049 00       		.byte	0
 696 004a 07       		.uleb128 0x7
 697 004b 0D       		.uleb128 0xd
 698 004c 00       		.byte	0
 699 004d 03       		.uleb128 0x3
 700 004e 08       		.uleb128 0x8
 701 004f 3A       		.uleb128 0x3a
 702 0050 0B       		.uleb128 0xb
 703 0051 3B       		.uleb128 0x3b
 704 0052 05       		.uleb128 0x5
 705 0053 49       		.uleb128 0x49
 706 0054 13       		.uleb128 0x13
 707 0055 38       		.uleb128 0x38
 708 0056 0A       		.uleb128 0xa
 709 0057 00       		.byte	0
 710 0058 00       		.byte	0
 711 0059 08       		.uleb128 0x8
 712 005a 0D       		.uleb128 0xd
 713 005b 00       		.byte	0
 714 005c 03       		.uleb128 0x3
 715 005d 0E       		.uleb128 0xe
 716 005e 3A       		.uleb128 0x3a
 717 005f 0B       		.uleb128 0xb
 718 0060 3B       		.uleb128 0x3b
 719 0061 05       		.uleb128 0x5
 720 0062 49       		.uleb128 0x49
 721 0063 13       		.uleb128 0x13
 722 0064 38       		.uleb128 0x38
 723 0065 0A       		.uleb128 0xa
 724 0066 00       		.byte	0
 725 0067 00       		.byte	0
 726 0068 09       		.uleb128 0x9
 727 0069 16       		.uleb128 0x16
 728 006a 00       		.byte	0
 729 006b 03       		.uleb128 0x3
 730 006c 0E       		.uleb128 0xe
 731 006d 3A       		.uleb128 0x3a
 732 006e 0B       		.uleb128 0xb
 733 006f 3B       		.uleb128 0x3b
 734 0070 05       		.uleb128 0x5
 735 0071 49       		.uleb128 0x49
 736 0072 13       		.uleb128 0x13
 737 0073 00       		.byte	0
 738 0074 00       		.byte	0
 739 0075 0A       		.uleb128 0xa
 740 0076 2E       		.uleb128 0x2e
ARM GAS  /tmp/cct8K0iD.s 			page 20


 741 0077 00       		.byte	0
 742 0078 3F       		.uleb128 0x3f
 743 0079 0C       		.uleb128 0xc
 744 007a 03       		.uleb128 0x3
 745 007b 0E       		.uleb128 0xe
 746 007c 3A       		.uleb128 0x3a
 747 007d 0B       		.uleb128 0xb
 748 007e 3B       		.uleb128 0x3b
 749 007f 0B       		.uleb128 0xb
 750 0080 27       		.uleb128 0x27
 751 0081 0C       		.uleb128 0xc
 752 0082 11       		.uleb128 0x11
 753 0083 01       		.uleb128 0x1
 754 0084 12       		.uleb128 0x12
 755 0085 01       		.uleb128 0x1
 756 0086 40       		.uleb128 0x40
 757 0087 0A       		.uleb128 0xa
 758 0088 9742     		.uleb128 0x2117
 759 008a 0C       		.uleb128 0xc
 760 008b 00       		.byte	0
 761 008c 00       		.byte	0
 762 008d 0B       		.uleb128 0xb
 763 008e 2E       		.uleb128 0x2e
 764 008f 01       		.byte	0x1
 765 0090 3F       		.uleb128 0x3f
 766 0091 0C       		.uleb128 0xc
 767 0092 03       		.uleb128 0x3
 768 0093 0E       		.uleb128 0xe
 769 0094 3A       		.uleb128 0x3a
 770 0095 0B       		.uleb128 0xb
 771 0096 3B       		.uleb128 0x3b
 772 0097 05       		.uleb128 0x5
 773 0098 27       		.uleb128 0x27
 774 0099 0C       		.uleb128 0xc
 775 009a 11       		.uleb128 0x11
 776 009b 01       		.uleb128 0x1
 777 009c 12       		.uleb128 0x12
 778 009d 01       		.uleb128 0x1
 779 009e 40       		.uleb128 0x40
 780 009f 06       		.uleb128 0x6
 781 00a0 9642     		.uleb128 0x2116
 782 00a2 0C       		.uleb128 0xc
 783 00a3 01       		.uleb128 0x1
 784 00a4 13       		.uleb128 0x13
 785 00a5 00       		.byte	0
 786 00a6 00       		.byte	0
 787 00a7 0C       		.uleb128 0xc
 788 00a8 34       		.uleb128 0x34
 789 00a9 00       		.byte	0
 790 00aa 03       		.uleb128 0x3
 791 00ab 08       		.uleb128 0x8
 792 00ac 3A       		.uleb128 0x3a
 793 00ad 0B       		.uleb128 0xb
 794 00ae 3B       		.uleb128 0x3b
 795 00af 05       		.uleb128 0x5
 796 00b0 49       		.uleb128 0x49
 797 00b1 13       		.uleb128 0x13
ARM GAS  /tmp/cct8K0iD.s 			page 21


 798 00b2 02       		.uleb128 0x2
 799 00b3 06       		.uleb128 0x6
 800 00b4 00       		.byte	0
 801 00b5 00       		.byte	0
 802 00b6 0D       		.uleb128 0xd
 803 00b7 34       		.uleb128 0x34
 804 00b8 00       		.byte	0
 805 00b9 03       		.uleb128 0x3
 806 00ba 0E       		.uleb128 0xe
 807 00bb 3A       		.uleb128 0x3a
 808 00bc 0B       		.uleb128 0xb
 809 00bd 3B       		.uleb128 0x3b
 810 00be 05       		.uleb128 0x5
 811 00bf 49       		.uleb128 0x49
 812 00c0 13       		.uleb128 0x13
 813 00c1 02       		.uleb128 0x2
 814 00c2 06       		.uleb128 0x6
 815 00c3 00       		.byte	0
 816 00c4 00       		.byte	0
 817 00c5 0E       		.uleb128 0xe
 818 00c6 34       		.uleb128 0x34
 819 00c7 00       		.byte	0
 820 00c8 03       		.uleb128 0x3
 821 00c9 0E       		.uleb128 0xe
 822 00ca 3A       		.uleb128 0x3a
 823 00cb 0B       		.uleb128 0xb
 824 00cc 3B       		.uleb128 0x3b
 825 00cd 0B       		.uleb128 0xb
 826 00ce 49       		.uleb128 0x49
 827 00cf 13       		.uleb128 0x13
 828 00d0 3F       		.uleb128 0x3f
 829 00d1 0C       		.uleb128 0xc
 830 00d2 02       		.uleb128 0x2
 831 00d3 0A       		.uleb128 0xa
 832 00d4 00       		.byte	0
 833 00d5 00       		.byte	0
 834 00d6 0F       		.uleb128 0xf
 835 00d7 01       		.uleb128 0x1
 836 00d8 01       		.byte	0x1
 837 00d9 49       		.uleb128 0x49
 838 00da 13       		.uleb128 0x13
 839 00db 01       		.uleb128 0x1
 840 00dc 13       		.uleb128 0x13
 841 00dd 00       		.byte	0
 842 00de 00       		.byte	0
 843 00df 10       		.uleb128 0x10
 844 00e0 21       		.uleb128 0x21
 845 00e1 00       		.byte	0
 846 00e2 49       		.uleb128 0x49
 847 00e3 13       		.uleb128 0x13
 848 00e4 2F       		.uleb128 0x2f
 849 00e5 0B       		.uleb128 0xb
 850 00e6 00       		.byte	0
 851 00e7 00       		.byte	0
 852 00e8 11       		.uleb128 0x11
 853 00e9 26       		.uleb128 0x26
 854 00ea 00       		.byte	0
ARM GAS  /tmp/cct8K0iD.s 			page 22


 855 00eb 49       		.uleb128 0x49
 856 00ec 13       		.uleb128 0x13
 857 00ed 00       		.byte	0
 858 00ee 00       		.byte	0
 859 00ef 00       		.byte	0
 860              		.section	.debug_loc,"",%progbits
 861              	.Ldebug_loc0:
 862              	.LLST0:
 863 0000 60000000 		.4byte	.LFB35-.Ltext0
 864 0004 62000000 		.4byte	.LCFI0-.Ltext0
 865 0008 0200     		.2byte	0x2
 866 000a 7D       		.byte	0x7d
 867 000b 00       		.sleb128 0
 868 000c 62000000 		.4byte	.LCFI0-.Ltext0
 869 0010 D4000000 		.4byte	.LFE35-.Ltext0
 870 0014 0200     		.2byte	0x2
 871 0016 7D       		.byte	0x7d
 872 0017 18       		.sleb128 24
 873 0018 00000000 		.4byte	0
 874 001c 00000000 		.4byte	0
 875              	.LLST1:
 876 0020 60000000 		.4byte	.LVL0-.Ltext0
 877 0024 6A000000 		.4byte	.LVL1-.Ltext0
 878 0028 0200     		.2byte	0x2
 879 002a 30       		.byte	0x30
 880 002b 9F       		.byte	0x9f
 881 002c 6A000000 		.4byte	.LVL1-.Ltext0
 882 0030 6C000000 		.4byte	.LVL2-.Ltext0
 883 0034 0500     		.2byte	0x5
 884 0036 72       		.byte	0x72
 885 0037 00       		.sleb128 0
 886 0038 3C       		.byte	0x3c
 887 0039 1A       		.byte	0x1a
 888 003a 9F       		.byte	0x9f
 889 003b 6C000000 		.4byte	.LVL2-.Ltext0
 890 003f 76000000 		.4byte	.LVL3-.Ltext0
 891 0043 0100     		.2byte	0x1
 892 0045 53       		.byte	0x53
 893 0046 76000000 		.4byte	.LVL3-.Ltext0
 894 004a 7A000000 		.4byte	.LVL4-.Ltext0
 895 004e 0500     		.2byte	0x5
 896 0050 72       		.byte	0x72
 897 0051 00       		.sleb128 0
 898 0052 3C       		.byte	0x3c
 899 0053 1A       		.byte	0x1a
 900 0054 9F       		.byte	0x9f
 901 0055 7A000000 		.4byte	.LVL4-.Ltext0
 902 0059 7C000000 		.4byte	.LVL5-.Ltext0
 903 005d 0100     		.2byte	0x1
 904 005f 53       		.byte	0x53
 905 0060 7C000000 		.4byte	.LVL5-.Ltext0
 906 0064 80000000 		.4byte	.LVL7-.Ltext0
 907 0068 0500     		.2byte	0x5
 908 006a 72       		.byte	0x72
 909 006b 00       		.sleb128 0
 910 006c 3C       		.byte	0x3c
 911 006d 1A       		.byte	0x1a
ARM GAS  /tmp/cct8K0iD.s 			page 23


 912 006e 9F       		.byte	0x9f
 913 006f AE000000 		.4byte	.LVL14-.Ltext0
 914 0073 B2000000 		.4byte	.LVL15-.Ltext0
 915 0077 1300     		.2byte	0x13
 916 0079 73       		.byte	0x73
 917 007a 00       		.sleb128 0
 918 007b 08       		.byte	0x8
 919 007c F0       		.byte	0xf0
 920 007d 1A       		.byte	0x1a
 921 007e 34       		.byte	0x34
 922 007f 25       		.byte	0x25
 923 0080 03       		.byte	0x3
 924 0081 00000000 		.4byte	AHBPrescTable
 925 0085 22       		.byte	0x22
 926 0086 94       		.byte	0x94
 927 0087 01       		.byte	0x1
 928 0088 08       		.byte	0x8
 929 0089 FF       		.byte	0xff
 930 008a 1A       		.byte	0x1a
 931 008b 9F       		.byte	0x9f
 932 008c 00000000 		.4byte	0
 933 0090 00000000 		.4byte	0
 934              	.LLST2:
 935 0094 60000000 		.4byte	.LVL0-.Ltext0
 936 0098 7E000000 		.4byte	.LVL6-.Ltext0
 937 009c 0200     		.2byte	0x2
 938 009e 30       		.byte	0x30
 939 009f 9F       		.byte	0x9f
 940 00a0 7E000000 		.4byte	.LVL6-.Ltext0
 941 00a4 8A000000 		.4byte	.LVL8-.Ltext0
 942 00a8 0700     		.2byte	0x7
 943 00aa 74       		.byte	0x74
 944 00ab 00       		.sleb128 0
 945 00ac 4E       		.byte	0x4e
 946 00ad 41       		.byte	0x41
 947 00ae 24       		.byte	0x24
 948 00af 1A       		.byte	0x1a
 949 00b0 9F       		.byte	0x9f
 950 00b1 92000000 		.4byte	.LVL10-.Ltext0
 951 00b5 AA000000 		.4byte	.LVL13-.Ltext0
 952 00b9 0100     		.2byte	0x1
 953 00bb 54       		.byte	0x54
 954 00bc 00000000 		.4byte	0
 955 00c0 00000000 		.4byte	0
 956              	.LLST3:
 957 00c4 60000000 		.4byte	.LVL0-.Ltext0
 958 00c8 90000000 		.4byte	.LVL9-.Ltext0
 959 00cc 0200     		.2byte	0x2
 960 00ce 30       		.byte	0x30
 961 00cf 9F       		.byte	0x9f
 962 00d0 90000000 		.4byte	.LVL9-.Ltext0
 963 00d4 A7000000 		.4byte	.LVL12-1-.Ltext0
 964 00d8 0100     		.2byte	0x1
 965 00da 52       		.byte	0x52
 966 00db 00000000 		.4byte	0
 967 00df 00000000 		.4byte	0
 968              	.LLST4:
ARM GAS  /tmp/cct8K0iD.s 			page 24


 969 00e3 60000000 		.4byte	.LVL0-.Ltext0
 970 00e7 94000000 		.4byte	.LVL11-.Ltext0
 971 00eb 0200     		.2byte	0x2
 972 00ed 30       		.byte	0x30
 973 00ee 9F       		.byte	0x9f
 974 00ef 94000000 		.4byte	.LVL11-.Ltext0
 975 00f3 A7000000 		.4byte	.LVL12-1-.Ltext0
 976 00f7 0100     		.2byte	0x1
 977 00f9 51       		.byte	0x51
 978 00fa 00000000 		.4byte	0
 979 00fe 00000000 		.4byte	0
 980              		.section	.debug_aranges,"",%progbits
 981 0000 1C000000 		.4byte	0x1c
 982 0004 0200     		.2byte	0x2
 983 0006 00000000 		.4byte	.Ldebug_info0
 984 000a 04       		.byte	0x4
 985 000b 00       		.byte	0
 986 000c 0000     		.2byte	0
 987 000e 0000     		.2byte	0
 988 0010 00000000 		.4byte	.Ltext0
 989 0014 D4000000 		.4byte	.Letext0-.Ltext0
 990 0018 00000000 		.4byte	0
 991 001c 00000000 		.4byte	0
 992              		.section	.debug_line,"",%progbits
 993              	.Ldebug_line0:
 994 0000 31010000 		.section	.debug_str,"MS",%progbits,1
 994      0200E300 
 994      00000201 
 994      FB0E0D00 
 994      01010101 
 995              	.LASF25:
 996 0000 706C6C6D 		.ascii	"pllmull\000"
 996      756C6C00 
 997              	.LASF5:
 998 0008 5F5F7569 		.ascii	"__uint8_t\000"
 998      6E74385F 
 998      7400
 999              	.LASF14:
 1000 0012 43464752 		.ascii	"CFGR\000"
 1000      00
 1001              	.LASF17:
 1002 0017 41484245 		.ascii	"AHBENR\000"
 1002      4E5200
 1003              	.LASF26:
 1004 001e 706C6C73 		.ascii	"pllsource\000"
 1004      6F757263 
 1004      6500
 1005              	.LASF21:
 1006 0028 41484252 		.ascii	"AHBRSTR\000"
 1006      53545200 
 1007              	.LASF20:
 1008 0030 42444352 		.ascii	"BDCR\000"
 1008      00
 1009              	.LASF31:
 1010 0035 474E5520 		.ascii	"GNU C11 5.2.0 -mcpu=cortex-m0 -mthumb -g -gdwarf-2 "
 1010      43313120 
 1010      352E322E 
ARM GAS  /tmp/cct8K0iD.s 			page 25


 1010      30202D6D 
 1010      6370753D 
 1011 0068 2D4F7320 		.ascii	"-Os -fomit-frame-pointer\000"
 1011      2D666F6D 
 1011      69742D66 
 1011      72616D65 
 1011      2D706F69 
 1012              	.LASF22:
 1013 0081 43464752 		.ascii	"CFGR2\000"
 1013      3200
 1014              	.LASF16:
 1015 0087 41504231 		.ascii	"APB1RSTR\000"
 1015      52535452 
 1015      00
 1016              	.LASF1:
 1017 0090 756E7369 		.ascii	"unsigned char\000"
 1017      676E6564 
 1017      20636861 
 1017      7200
 1018              	.LASF29:
 1019 009e 41484250 		.ascii	"AHBPrescTable\000"
 1019      72657363 
 1019      5461626C 
 1019      6500
 1020              	.LASF7:
 1021 00ac 6C6F6E67 		.ascii	"long unsigned int\000"
 1021      20756E73 
 1021      69676E65 
 1021      6420696E 
 1021      7400
 1022              	.LASF23:
 1023 00be 43464752 		.ascii	"CFGR3\000"
 1023      3300
 1024              	.LASF3:
 1025 00c4 73686F72 		.ascii	"short unsigned int\000"
 1025      7420756E 
 1025      7369676E 
 1025      65642069 
 1025      6E7400
 1026              	.LASF32:
 1027 00d7 7372632F 		.ascii	"src/system_stm32f0xx.c\000"
 1027      73797374 
 1027      656D5F73 
 1027      746D3332 
 1027      66307878 
 1028              	.LASF18:
 1029 00ee 41504232 		.ascii	"APB2ENR\000"
 1029      454E5200 
 1030              	.LASF6:
 1031 00f6 5F5F7569 		.ascii	"__uint32_t\000"
 1031      6E743332 
 1031      5F7400
 1032              	.LASF33:
 1033 0101 2F686F6D 		.ascii	"/home/rtbaker/git/iotogglem0_wspl\000"
 1033      652F7274 
 1033      62616B65 
 1033      722F6769 
ARM GAS  /tmp/cct8K0iD.s 			page 26


 1033      742F696F 
 1034              	.LASF19:
 1035 0123 41504231 		.ascii	"APB1ENR\000"
 1035      454E5200 
 1036              	.LASF15:
 1037 012b 41504232 		.ascii	"APB2RSTR\000"
 1037      52535452 
 1037      00
 1038              	.LASF27:
 1039 0134 70726564 		.ascii	"predivfactor\000"
 1039      69766661 
 1039      63746F72 
 1039      00
 1040              	.LASF10:
 1041 0141 756E7369 		.ascii	"unsigned int\000"
 1041      676E6564 
 1041      20696E74 
 1041      00
 1042              	.LASF9:
 1043 014e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1043      206C6F6E 
 1043      6720756E 
 1043      7369676E 
 1043      65642069 
 1044              	.LASF11:
 1045 0165 75696E74 		.ascii	"uint8_t\000"
 1045      385F7400 
 1046              	.LASF34:
 1047 016d 53797374 		.ascii	"SystemInit\000"
 1047      656D496E 
 1047      697400
 1048              	.LASF13:
 1049 0178 73697A65 		.ascii	"sizetype\000"
 1049      74797065 
 1049      00
 1050              	.LASF8:
 1051 0181 6C6F6E67 		.ascii	"long long int\000"
 1051      206C6F6E 
 1051      6720696E 
 1051      7400
 1052              	.LASF28:
 1053 018f 53797374 		.ascii	"SystemCoreClock\000"
 1053      656D436F 
 1053      7265436C 
 1053      6F636B00 
 1054              	.LASF35:
 1055 019f 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1055      656D436F 
 1055      7265436C 
 1055      6F636B55 
 1055      70646174 
 1056              	.LASF30:
 1057 01b5 41504250 		.ascii	"APBPrescTable\000"
 1057      72657363 
 1057      5461626C 
 1057      6500
 1058              	.LASF2:
ARM GAS  /tmp/cct8K0iD.s 			page 27


 1059 01c3 73686F72 		.ascii	"short int\000"
 1059      7420696E 
 1059      7400
 1060              	.LASF24:
 1061 01cd 5243435F 		.ascii	"RCC_TypeDef\000"
 1061      54797065 
 1061      44656600 
 1062              	.LASF12:
 1063 01d9 75696E74 		.ascii	"uint32_t\000"
 1063      33325F74 
 1063      00
 1064              	.LASF4:
 1065 01e2 6C6F6E67 		.ascii	"long int\000"
 1065      20696E74 
 1065      00
 1066              	.LASF0:
 1067 01eb 7369676E 		.ascii	"signed char\000"
 1067      65642063 
 1067      68617200 
 1068              		.ident	"GCC: (Fedora 5.2.0-4.fc24) 5.2.0"
ARM GAS  /tmp/cct8K0iD.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f0xx.c
     /tmp/cct8K0iD.s:78     .text:0000000000000000 $t
     /tmp/cct8K0iD.s:83     .text:0000000000000000 SystemInit
     /tmp/cct8K0iD.s:141    .text:0000000000000048 $d
     /tmp/cct8K0iD.s:151    .text:0000000000000060 $t
     /tmp/cct8K0iD.s:156    .text:0000000000000060 SystemCoreClockUpdate
     /tmp/cct8K0iD.s:268    .text:00000000000000c0 $d
     /tmp/cct8K0iD.s:302    .rodata:0000000000000010 APBPrescTable
     /tmp/cct8K0iD.s:283    .rodata:0000000000000000 AHBPrescTable
     /tmp/cct8K0iD.s:316    .data:0000000000000000 SystemCoreClock
     /tmp/cct8K0iD.s:312    .data:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
