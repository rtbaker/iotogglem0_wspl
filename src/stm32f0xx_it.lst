ARM GAS  /tmp/ccQFQcyu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"stm32f0xx_it.c"
  14              	@ GNU C11 (Fedora 5.2.0-4.fc24) version 5.2.0 (arm-none-eabi)
  15              	@	compiled by GNU C version 6.0.0 20160201 (Red Hat 6.0.0-0.9), GMP version 6.1.0, MPFR version 3.1
  16              	@ warning: GMP header version 6.1.0 differs from library version 6.1.1.
  17              	@ warning: MPFR header version 3.1.3 differs from library version 3.1.4.
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I .
  20              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/CMSIS/Device/ST/STM32F0xx/Include
  21              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/CMSIS/Include
  22              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/STM32F0xx_HAL_Driver/Inc
  23              	@ -I ../../STM32F0-Discovery_FW_V1.0.0/Utilities/STM32F0-Discovery
  24              	@ -I ../../STM32Cube_FW_F0_V1.6.0/Drivers/BSP/STM32F072B-Discovery -I ./inc
  25              	@ -imultilib armv6-m -D__USES_INITFINI__ -D STM32F072xB
  26              	@ -D USE_STDPERIPH_DRIVER -D RUN_FROM_FLASH=1 src/stm32f0xx_it.c
  27              	@ -mcpu=cortex-m0 -mthumb -auxbase-strip src/stm32f0xx_it.o -g -gdwarf-2
  28              	@ -Os -Wall -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  29              	@ options enabled:  -faggressive-loop-optimizations -falign-functions
  30              	@ -falign-jumps -falign-labels -falign-loops -fauto-inc-dec
  31              	@ -fbranch-count-reg -fcaller-saves -fchkp-check-incomplete-type
  32              	@ -fchkp-check-read -fchkp-check-write -fchkp-instrument-calls
  33              	@ -fchkp-narrow-bounds -fchkp-optimize -fchkp-store-bounds
  34              	@ -fchkp-use-static-bounds -fchkp-use-static-const-bounds
  35              	@ -fchkp-use-wrappers -fcombine-stack-adjustments -fcommon -fcompare-elim
  36              	@ -fcprop-registers -fcrossjumping -fcse-follow-jumps -fdefer-pop
  37              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  38              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  39              	@ -fexpensive-optimizations -fforward-propagate -ffunction-cse -fgcse
  40              	@ -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
  41              	@ -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  42              	@ -findirect-inlining -finline -finline-atomics -finline-functions
  43              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  44              	@ -fipa-cp-alignment -fipa-icf -fipa-icf-functions -fipa-icf-variables
  45              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  46              	@ -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  47              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  48              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  49              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  50              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  51              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  52              	@ -freg-struct-return -freorder-blocks -freorder-functions
  53              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  54              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  55              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  56              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  57              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
ARM GAS  /tmp/ccQFQcyu.s 			page 2


  58              	@ -fshow-column -fshrink-wrap -fsigned-zeros -fsplit-ivs-in-unroller
  59              	@ -fsplit-wide-types -fssa-phiopt -fstdarg-opt -fstrict-aliasing
  60              	@ -fstrict-overflow -fstrict-volatile-bitfields -fsync-libcalls
  61              	@ -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  62              	@ -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  63              	@ -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
  64              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  65              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  66              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  67              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  68              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  69              	@ -ftree-vrp -funit-at-a-time -fvar-tracking -fvar-tracking-assignments
  70              	@ -fverbose-asm -fzero-initialized-in-bss -mlittle-endian
  71              	@ -mpic-data-is-text-relative -msched-prolog -mthumb
  72              	@ -mvectorize-with-neon-quad
  73              	
  74              		.text
  75              	.Ltext0:
  76              		.cfi_sections	.debug_frame
  77              		.align	1
  78              		.global	NMI_Handler
  79              		.code	16
  80              		.thumb_func
  81              		.type	NMI_Handler, %function
  82              	NMI_Handler:
  83              	.LFB42:
  84              		.cfi_startproc
  85              		@ sp needed	@
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE42:
  89              		.size	NMI_Handler, .-NMI_Handler
  90              		.align	1
  91              		.global	HardFault_Handler
  92              		.code	16
  93              		.thumb_func
  94              		.type	HardFault_Handler, %function
  95              	HardFault_Handler:
  96              	.LFB35:
  97              		.file 1 "src/stm32f0xx_it.c"
   1:src/stm32f0xx_it.c **** /**
   2:src/stm32f0xx_it.c ****   ******************************************************************************
   3:src/stm32f0xx_it.c ****   * @file    Templates/Src/stm32f0xx_it.c 
   4:src/stm32f0xx_it.c ****   * @author  MCD Application Team
   5:src/stm32f0xx_it.c ****   * @version V1.6.0
   6:src/stm32f0xx_it.c ****   * @date    27-May-2016
   7:src/stm32f0xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:src/stm32f0xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:src/stm32f0xx_it.c ****   *          peripherals interrupt service routine.
  10:src/stm32f0xx_it.c ****   ******************************************************************************
  11:src/stm32f0xx_it.c ****   * @attention
  12:src/stm32f0xx_it.c ****   *
  13:src/stm32f0xx_it.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  14:src/stm32f0xx_it.c ****   *
  15:src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  17:src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/ccQFQcyu.s 			page 3


  18:src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  19:src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  22:src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  24:src/stm32f0xx_it.c ****   *      without specific prior written permission.
  25:src/stm32f0xx_it.c ****   *
  26:src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:src/stm32f0xx_it.c ****   *
  37:src/stm32f0xx_it.c ****   ******************************************************************************
  38:src/stm32f0xx_it.c ****   */
  39:src/stm32f0xx_it.c **** 
  40:src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  41:src/stm32f0xx_it.c **** #include "main.h"
  42:src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  43:src/stm32f0xx_it.c **** 
  44:src/stm32f0xx_it.c **** 
  45:src/stm32f0xx_it.c **** /** @addtogroup STM32F0xx_HAL_Examples
  46:src/stm32f0xx_it.c ****   * @{
  47:src/stm32f0xx_it.c ****   */
  48:src/stm32f0xx_it.c **** 
  49:src/stm32f0xx_it.c **** /** @addtogroup Templates
  50:src/stm32f0xx_it.c ****   * @{
  51:src/stm32f0xx_it.c ****   */
  52:src/stm32f0xx_it.c **** 
  53:src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  54:src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  55:src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  56:src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  57:src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  58:src/stm32f0xx_it.c **** /* Private functions ---------------------------------------------------------*/
  59:src/stm32f0xx_it.c **** 
  60:src/stm32f0xx_it.c **** /******************************************************************************/
  61:src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Exceptions Handlers                         */
  62:src/stm32f0xx_it.c **** /******************************************************************************/
  63:src/stm32f0xx_it.c **** 
  64:src/stm32f0xx_it.c **** /**
  65:src/stm32f0xx_it.c ****   * @brief   This function handles NMI exception.
  66:src/stm32f0xx_it.c ****   * @param  None
  67:src/stm32f0xx_it.c ****   * @retval None
  68:src/stm32f0xx_it.c ****   */
  69:src/stm32f0xx_it.c **** void NMI_Handler(void)
  70:src/stm32f0xx_it.c **** {
  71:src/stm32f0xx_it.c **** }
  72:src/stm32f0xx_it.c **** 
  73:src/stm32f0xx_it.c **** /**
  74:src/stm32f0xx_it.c ****   * @brief  This function handles Hard Fault exception.
ARM GAS  /tmp/ccQFQcyu.s 			page 4


  75:src/stm32f0xx_it.c ****   * @param  None
  76:src/stm32f0xx_it.c ****   * @retval None
  77:src/stm32f0xx_it.c ****   */
  78:src/stm32f0xx_it.c **** void HardFault_Handler(void)
  79:src/stm32f0xx_it.c **** {
  98              		.loc 1 79 0
  99              		.cfi_startproc
 100              	.L3:
 101 0002 FEE7     		b	.L3	@
 102              		.cfi_endproc
 103              	.LFE35:
 104              		.size	HardFault_Handler, .-HardFault_Handler
 105              		.align	1
 106              		.global	SVC_Handler
 107              		.code	16
 108              		.thumb_func
 109              		.type	SVC_Handler, %function
 110              	SVC_Handler:
 111              	.LFB40:
 112              		.cfi_startproc
 113              		@ sp needed	@
 114 0004 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE40:
 117              		.size	SVC_Handler, .-SVC_Handler
 118              		.align	1
 119              		.global	PendSV_Handler
 120              		.code	16
 121              		.thumb_func
 122              		.type	PendSV_Handler, %function
 123              	PendSV_Handler:
 124              	.LFB37:
  80:src/stm32f0xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  81:src/stm32f0xx_it.c ****   while (1)
  82:src/stm32f0xx_it.c ****   {
  83:src/stm32f0xx_it.c ****   }
  84:src/stm32f0xx_it.c **** }
  85:src/stm32f0xx_it.c **** 
  86:src/stm32f0xx_it.c **** /**
  87:src/stm32f0xx_it.c ****   * @brief  This function handles SVCall exception.
  88:src/stm32f0xx_it.c ****   * @param  None
  89:src/stm32f0xx_it.c ****   * @retval None
  90:src/stm32f0xx_it.c ****   */
  91:src/stm32f0xx_it.c **** void SVC_Handler(void)
  92:src/stm32f0xx_it.c **** {
  93:src/stm32f0xx_it.c **** }
  94:src/stm32f0xx_it.c **** 
  95:src/stm32f0xx_it.c **** /**
  96:src/stm32f0xx_it.c ****   * @brief  This function handles PendSVC exception.
  97:src/stm32f0xx_it.c ****   * @param  None
  98:src/stm32f0xx_it.c ****   * @retval None
  99:src/stm32f0xx_it.c ****   */
 100:src/stm32f0xx_it.c **** void PendSV_Handler(void)
 101:src/stm32f0xx_it.c **** {
 125              		.loc 1 101 0
 126              		.cfi_startproc
 102:src/stm32f0xx_it.c **** }
ARM GAS  /tmp/ccQFQcyu.s 			page 5


 127              		.loc 1 102 0
 128              		@ sp needed	@
 129 0006 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE37:
 132              		.size	PendSV_Handler, .-PendSV_Handler
 133              		.align	1
 134              		.global	SysTick_Handler
 135              		.code	16
 136              		.thumb_func
 137              		.type	SysTick_Handler, %function
 138              	SysTick_Handler:
 139              	.LFB38:
 103:src/stm32f0xx_it.c **** 
 104:src/stm32f0xx_it.c **** /**
 105:src/stm32f0xx_it.c ****   * @brief  This function handles SysTick Handler.
 106:src/stm32f0xx_it.c ****   * @param  None
 107:src/stm32f0xx_it.c ****   * @retval None
 108:src/stm32f0xx_it.c ****   */
 109:src/stm32f0xx_it.c **** void SysTick_Handler(void)
 110:src/stm32f0xx_it.c **** {
 140              		.loc 1 110 0
 141              		.cfi_startproc
 142 0008 10B5     		push	{r4, lr}	@
 143              	.LCFI0:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 111:src/stm32f0xx_it.c ****     HAL_IncTick();
 147              		.loc 1 111 0
 148 000a FFF7FEFF 		bl	HAL_IncTick	@
 149              	.LVL0:
 112:src/stm32f0xx_it.c **** }
 150              		.loc 1 112 0
 151              		@ sp needed	@
 152 000e 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE38:
 155              		.size	SysTick_Handler, .-SysTick_Handler
 156              	.Letext0:
 157              		.file 2 "../../STM32Cube_FW_F0_V1.6.0/Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 158              		.section	.debug_info,"",%progbits
 159              	.Ldebug_info0:
 160 0000 E0000000 		.4byte	0xe0
 161 0004 0200     		.2byte	0x2
 162 0006 00000000 		.4byte	.Ldebug_abbrev0
 163 000a 04       		.byte	0x4
 164 000b 01       		.uleb128 0x1
 165 000c F1000000 		.4byte	.LASF12
 166 0010 0C       		.byte	0xc
 167 0011 0E000000 		.4byte	.LASF13
 168 0015 B0000000 		.4byte	.LASF14
 169 0019 00000000 		.4byte	.Ltext0
 170 001d 10000000 		.4byte	.Letext0
 171 0021 00000000 		.4byte	.Ldebug_line0
 172 0025 02       		.uleb128 0x2
 173 0026 01       		.byte	0x1
ARM GAS  /tmp/ccQFQcyu.s 			page 6


 174 0027 06       		.byte	0x6
 175 0028 E5000000 		.4byte	.LASF0
 176 002c 02       		.uleb128 0x2
 177 002d 01       		.byte	0x1
 178 002e 08       		.byte	0x8
 179 002f 2E000000 		.4byte	.LASF1
 180 0033 02       		.uleb128 0x2
 181 0034 02       		.byte	0x2
 182 0035 05       		.byte	0x5
 183 0036 49010000 		.4byte	.LASF2
 184 003a 02       		.uleb128 0x2
 185 003b 02       		.byte	0x2
 186 003c 07       		.byte	0x7
 187 003d D2000000 		.4byte	.LASF3
 188 0041 02       		.uleb128 0x2
 189 0042 04       		.byte	0x4
 190 0043 05       		.byte	0x5
 191 0044 A7000000 		.4byte	.LASF4
 192 0048 02       		.uleb128 0x2
 193 0049 04       		.byte	0x4
 194 004a 07       		.byte	0x7
 195 004b 48000000 		.4byte	.LASF5
 196 004f 02       		.uleb128 0x2
 197 0050 08       		.byte	0x8
 198 0051 05       		.byte	0x5
 199 0052 00000000 		.4byte	.LASF6
 200 0056 02       		.uleb128 0x2
 201 0057 08       		.byte	0x8
 202 0058 07       		.byte	0x7
 203 0059 5A000000 		.4byte	.LASF7
 204 005d 03       		.uleb128 0x3
 205 005e 04       		.byte	0x4
 206 005f 05       		.byte	0x5
 207 0060 696E7400 		.ascii	"int\000"
 208 0064 02       		.uleb128 0x2
 209 0065 04       		.byte	0x4
 210 0066 07       		.byte	0x7
 211 0067 21000000 		.4byte	.LASF8
 212 006b 02       		.uleb128 0x2
 213 006c 04       		.byte	0x4
 214 006d 07       		.byte	0x7
 215 006e 53010000 		.4byte	.LASF9
 216 0072 02       		.uleb128 0x2
 217 0073 08       		.byte	0x8
 218 0074 04       		.byte	0x4
 219 0075 3D010000 		.4byte	.LASF10
 220 0079 02       		.uleb128 0x2
 221 007a 01       		.byte	0x1
 222 007b 08       		.byte	0x8
 223 007c 92000000 		.4byte	.LASF11
 224 0080 04       		.uleb128 0x4
 225 0081 01       		.byte	0x1
 226 0082 71000000 		.4byte	.LASF15
 227 0086 01       		.byte	0x1
 228 0087 4E       		.byte	0x4e
 229 0088 01       		.byte	0x1
 230 0089 01       		.byte	0x1
ARM GAS  /tmp/ccQFQcyu.s 			page 7


 231 008a 02000000 		.4byte	.LFB35
 232 008e 04000000 		.4byte	.LFE35
 233 0092 02       		.byte	0x2
 234 0093 7D       		.byte	0x7d
 235 0094 00       		.sleb128 0
 236 0095 01       		.byte	0x1
 237 0096 05       		.uleb128 0x5
 238 0097 01       		.byte	0x1
 239 0098 83000000 		.4byte	.LASF16
 240 009c 01       		.byte	0x1
 241 009d 64       		.byte	0x64
 242 009e 01       		.byte	0x1
 243 009f 01       		.byte	0x1
 244 00a0 06       		.uleb128 0x6
 245 00a1 96000000 		.4byte	0x96
 246 00a5 06000000 		.4byte	.LFB37
 247 00a9 08000000 		.4byte	.LFE37
 248 00ad 02       		.byte	0x2
 249 00ae 7D       		.byte	0x7d
 250 00af 00       		.sleb128 0
 251 00b0 01       		.byte	0x1
 252 00b1 07       		.uleb128 0x7
 253 00b2 01       		.byte	0x1
 254 00b3 97000000 		.4byte	.LASF17
 255 00b7 01       		.byte	0x1
 256 00b8 6D       		.byte	0x6d
 257 00b9 01       		.byte	0x1
 258 00ba 08000000 		.4byte	.LFB38
 259 00be 10000000 		.4byte	.LFE38
 260 00c2 00000000 		.4byte	.LLST0
 261 00c6 01       		.byte	0x1
 262 00c7 D5000000 		.4byte	0xd5
 263 00cb 08       		.uleb128 0x8
 264 00cc 0E000000 		.4byte	.LVL0
 265 00d0 D5000000 		.4byte	0xd5
 266 00d4 00       		.byte	0
 267 00d5 09       		.uleb128 0x9
 268 00d6 01       		.byte	0x1
 269 00d7 01       		.byte	0x1
 270 00d8 3C000000 		.4byte	.LASF18
 271 00dc 3C000000 		.4byte	.LASF18
 272 00e0 02       		.byte	0x2
 273 00e1 0F02     		.2byte	0x20f
 274 00e3 00       		.byte	0
 275              		.section	.debug_abbrev,"",%progbits
 276              	.Ldebug_abbrev0:
 277 0000 01       		.uleb128 0x1
 278 0001 11       		.uleb128 0x11
 279 0002 01       		.byte	0x1
 280 0003 25       		.uleb128 0x25
 281 0004 0E       		.uleb128 0xe
 282 0005 13       		.uleb128 0x13
 283 0006 0B       		.uleb128 0xb
 284 0007 03       		.uleb128 0x3
 285 0008 0E       		.uleb128 0xe
 286 0009 1B       		.uleb128 0x1b
 287 000a 0E       		.uleb128 0xe
ARM GAS  /tmp/ccQFQcyu.s 			page 8


 288 000b 11       		.uleb128 0x11
 289 000c 01       		.uleb128 0x1
 290 000d 12       		.uleb128 0x12
 291 000e 01       		.uleb128 0x1
 292 000f 10       		.uleb128 0x10
 293 0010 06       		.uleb128 0x6
 294 0011 00       		.byte	0
 295 0012 00       		.byte	0
 296 0013 02       		.uleb128 0x2
 297 0014 24       		.uleb128 0x24
 298 0015 00       		.byte	0
 299 0016 0B       		.uleb128 0xb
 300 0017 0B       		.uleb128 0xb
 301 0018 3E       		.uleb128 0x3e
 302 0019 0B       		.uleb128 0xb
 303 001a 03       		.uleb128 0x3
 304 001b 0E       		.uleb128 0xe
 305 001c 00       		.byte	0
 306 001d 00       		.byte	0
 307 001e 03       		.uleb128 0x3
 308 001f 24       		.uleb128 0x24
 309 0020 00       		.byte	0
 310 0021 0B       		.uleb128 0xb
 311 0022 0B       		.uleb128 0xb
 312 0023 3E       		.uleb128 0x3e
 313 0024 0B       		.uleb128 0xb
 314 0025 03       		.uleb128 0x3
 315 0026 08       		.uleb128 0x8
 316 0027 00       		.byte	0
 317 0028 00       		.byte	0
 318 0029 04       		.uleb128 0x4
 319 002a 2E       		.uleb128 0x2e
 320 002b 00       		.byte	0
 321 002c 3F       		.uleb128 0x3f
 322 002d 0C       		.uleb128 0xc
 323 002e 03       		.uleb128 0x3
 324 002f 0E       		.uleb128 0xe
 325 0030 3A       		.uleb128 0x3a
 326 0031 0B       		.uleb128 0xb
 327 0032 3B       		.uleb128 0x3b
 328 0033 0B       		.uleb128 0xb
 329 0034 27       		.uleb128 0x27
 330 0035 0C       		.uleb128 0xc
 331 0036 8701     		.uleb128 0x87
 332 0038 0C       		.uleb128 0xc
 333 0039 11       		.uleb128 0x11
 334 003a 01       		.uleb128 0x1
 335 003b 12       		.uleb128 0x12
 336 003c 01       		.uleb128 0x1
 337 003d 40       		.uleb128 0x40
 338 003e 0A       		.uleb128 0xa
 339 003f 9742     		.uleb128 0x2117
 340 0041 0C       		.uleb128 0xc
 341 0042 00       		.byte	0
 342 0043 00       		.byte	0
 343 0044 05       		.uleb128 0x5
 344 0045 2E       		.uleb128 0x2e
ARM GAS  /tmp/ccQFQcyu.s 			page 9


 345 0046 00       		.byte	0
 346 0047 3F       		.uleb128 0x3f
 347 0048 0C       		.uleb128 0xc
 348 0049 03       		.uleb128 0x3
 349 004a 0E       		.uleb128 0xe
 350 004b 3A       		.uleb128 0x3a
 351 004c 0B       		.uleb128 0xb
 352 004d 3B       		.uleb128 0x3b
 353 004e 0B       		.uleb128 0xb
 354 004f 27       		.uleb128 0x27
 355 0050 0C       		.uleb128 0xc
 356 0051 20       		.uleb128 0x20
 357 0052 0B       		.uleb128 0xb
 358 0053 00       		.byte	0
 359 0054 00       		.byte	0
 360 0055 06       		.uleb128 0x6
 361 0056 2E       		.uleb128 0x2e
 362 0057 00       		.byte	0
 363 0058 31       		.uleb128 0x31
 364 0059 13       		.uleb128 0x13
 365 005a 11       		.uleb128 0x11
 366 005b 01       		.uleb128 0x1
 367 005c 12       		.uleb128 0x12
 368 005d 01       		.uleb128 0x1
 369 005e 40       		.uleb128 0x40
 370 005f 0A       		.uleb128 0xa
 371 0060 9742     		.uleb128 0x2117
 372 0062 0C       		.uleb128 0xc
 373 0063 00       		.byte	0
 374 0064 00       		.byte	0
 375 0065 07       		.uleb128 0x7
 376 0066 2E       		.uleb128 0x2e
 377 0067 01       		.byte	0x1
 378 0068 3F       		.uleb128 0x3f
 379 0069 0C       		.uleb128 0xc
 380 006a 03       		.uleb128 0x3
 381 006b 0E       		.uleb128 0xe
 382 006c 3A       		.uleb128 0x3a
 383 006d 0B       		.uleb128 0xb
 384 006e 3B       		.uleb128 0x3b
 385 006f 0B       		.uleb128 0xb
 386 0070 27       		.uleb128 0x27
 387 0071 0C       		.uleb128 0xc
 388 0072 11       		.uleb128 0x11
 389 0073 01       		.uleb128 0x1
 390 0074 12       		.uleb128 0x12
 391 0075 01       		.uleb128 0x1
 392 0076 40       		.uleb128 0x40
 393 0077 06       		.uleb128 0x6
 394 0078 9742     		.uleb128 0x2117
 395 007a 0C       		.uleb128 0xc
 396 007b 01       		.uleb128 0x1
 397 007c 13       		.uleb128 0x13
 398 007d 00       		.byte	0
 399 007e 00       		.byte	0
 400 007f 08       		.uleb128 0x8
 401 0080 898201   		.uleb128 0x4109
ARM GAS  /tmp/ccQFQcyu.s 			page 10


 402 0083 00       		.byte	0
 403 0084 11       		.uleb128 0x11
 404 0085 01       		.uleb128 0x1
 405 0086 31       		.uleb128 0x31
 406 0087 13       		.uleb128 0x13
 407 0088 00       		.byte	0
 408 0089 00       		.byte	0
 409 008a 09       		.uleb128 0x9
 410 008b 2E       		.uleb128 0x2e
 411 008c 00       		.byte	0
 412 008d 3F       		.uleb128 0x3f
 413 008e 0C       		.uleb128 0xc
 414 008f 3C       		.uleb128 0x3c
 415 0090 0C       		.uleb128 0xc
 416 0091 8740     		.uleb128 0x2007
 417 0093 0E       		.uleb128 0xe
 418 0094 03       		.uleb128 0x3
 419 0095 0E       		.uleb128 0xe
 420 0096 3A       		.uleb128 0x3a
 421 0097 0B       		.uleb128 0xb
 422 0098 3B       		.uleb128 0x3b
 423 0099 05       		.uleb128 0x5
 424 009a 00       		.byte	0
 425 009b 00       		.byte	0
 426 009c 00       		.byte	0
 427              		.section	.debug_loc,"",%progbits
 428              	.Ldebug_loc0:
 429              	.LLST0:
 430 0000 08000000 		.4byte	.LFB38-.Ltext0
 431 0004 0A000000 		.4byte	.LCFI0-.Ltext0
 432 0008 0200     		.2byte	0x2
 433 000a 7D       		.byte	0x7d
 434 000b 00       		.sleb128 0
 435 000c 0A000000 		.4byte	.LCFI0-.Ltext0
 436 0010 10000000 		.4byte	.LFE38-.Ltext0
 437 0014 0200     		.2byte	0x2
 438 0016 7D       		.byte	0x7d
 439 0017 08       		.sleb128 8
 440 0018 00000000 		.4byte	0
 441 001c 00000000 		.4byte	0
 442              		.section	.debug_aranges,"",%progbits
 443 0000 1C000000 		.4byte	0x1c
 444 0004 0200     		.2byte	0x2
 445 0006 00000000 		.4byte	.Ldebug_info0
 446 000a 04       		.byte	0x4
 447 000b 00       		.byte	0
 448 000c 0000     		.2byte	0
 449 000e 0000     		.2byte	0
 450 0010 00000000 		.4byte	.Ltext0
 451 0014 10000000 		.4byte	.Letext0-.Ltext0
 452 0018 00000000 		.4byte	0
 453 001c 00000000 		.4byte	0
 454              		.section	.debug_line,"",%progbits
 455              	.Ldebug_line0:
 456 0000 97000000 		.section	.debug_str,"MS",%progbits,1
 456      02007A00 
 456      00000201 
ARM GAS  /tmp/ccQFQcyu.s 			page 11


 456      FB0E0D00 
 456      01010101 
 457              	.LASF6:
 458 0000 6C6F6E67 		.ascii	"long long int\000"
 458      206C6F6E 
 458      6720696E 
 458      7400
 459              	.LASF13:
 460 000e 7372632F 		.ascii	"src/stm32f0xx_it.c\000"
 460      73746D33 
 460      32663078 
 460      785F6974 
 460      2E6300
 461              	.LASF8:
 462 0021 756E7369 		.ascii	"unsigned int\000"
 462      676E6564 
 462      20696E74 
 462      00
 463              	.LASF1:
 464 002e 756E7369 		.ascii	"unsigned char\000"
 464      676E6564 
 464      20636861 
 464      7200
 465              	.LASF18:
 466 003c 48414C5F 		.ascii	"HAL_IncTick\000"
 466      496E6354 
 466      69636B00 
 467              	.LASF5:
 468 0048 6C6F6E67 		.ascii	"long unsigned int\000"
 468      20756E73 
 468      69676E65 
 468      6420696E 
 468      7400
 469              	.LASF7:
 470 005a 6C6F6E67 		.ascii	"long long unsigned int\000"
 470      206C6F6E 
 470      6720756E 
 470      7369676E 
 470      65642069 
 471              	.LASF15:
 472 0071 48617264 		.ascii	"HardFault_Handler\000"
 472      4661756C 
 472      745F4861 
 472      6E646C65 
 472      7200
 473              	.LASF16:
 474 0083 50656E64 		.ascii	"PendSV_Handler\000"
 474      53565F48 
 474      616E646C 
 474      657200
 475              	.LASF11:
 476 0092 63686172 		.ascii	"char\000"
 476      00
 477              	.LASF17:
 478 0097 53797354 		.ascii	"SysTick_Handler\000"
 478      69636B5F 
 478      48616E64 
ARM GAS  /tmp/ccQFQcyu.s 			page 12


 478      6C657200 
 479              	.LASF4:
 480 00a7 6C6F6E67 		.ascii	"long int\000"
 480      20696E74 
 480      00
 481              	.LASF14:
 482 00b0 2F686F6D 		.ascii	"/home/rtbaker/git/iotogglem0_wspl\000"
 482      652F7274 
 482      62616B65 
 482      722F6769 
 482      742F696F 
 483              	.LASF3:
 484 00d2 73686F72 		.ascii	"short unsigned int\000"
 484      7420756E 
 484      7369676E 
 484      65642069 
 484      6E7400
 485              	.LASF0:
 486 00e5 7369676E 		.ascii	"signed char\000"
 486      65642063 
 486      68617200 
 487              	.LASF12:
 488 00f1 474E5520 		.ascii	"GNU C11 5.2.0 -mcpu=cortex-m0 -mthumb -g -gdwarf-2 "
 488      43313120 
 488      352E322E 
 488      30202D6D 
 488      6370753D 
 489 0124 2D4F7320 		.ascii	"-Os -fomit-frame-pointer\000"
 489      2D666F6D 
 489      69742D66 
 489      72616D65 
 489      2D706F69 
 490              	.LASF10:
 491 013d 6C6F6E67 		.ascii	"long double\000"
 491      20646F75 
 491      626C6500 
 492              	.LASF2:
 493 0149 73686F72 		.ascii	"short int\000"
 493      7420696E 
 493      7400
 494              	.LASF9:
 495 0153 73697A65 		.ascii	"sizetype\000"
 495      74797065 
 495      00
 496              		.ident	"GCC: (Fedora 5.2.0-4.fc24) 5.2.0"
ARM GAS  /tmp/ccQFQcyu.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/ccQFQcyu.s:77     .text:0000000000000000 $t
     /tmp/ccQFQcyu.s:82     .text:0000000000000000 NMI_Handler
     /tmp/ccQFQcyu.s:95     .text:0000000000000002 HardFault_Handler
     /tmp/ccQFQcyu.s:110    .text:0000000000000004 SVC_Handler
     /tmp/ccQFQcyu.s:123    .text:0000000000000006 PendSV_Handler
     /tmp/ccQFQcyu.s:138    .text:0000000000000008 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
